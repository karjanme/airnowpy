variables:
  PYPI_SERVICE_CONNECTION: pypi
  PYTHON_VERSION: '3.7'

trigger:
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(PYTHON_VERSION)'
    inputs:
      versionSpec: '$(PYTHON_VERSION)'

  - script: python -m pip install --upgrade pip setuptools twine wheel
    displayName: 'Install tools'

  - script: pip install -r requirements.txt
    displayName: 'Install requirements'

  - script: pip install -e . 
    displayName: 'Install self'

  - script: |
      pip install pytest
      pip install pytest-cov
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=airnowpy --cov-report=xml
    displayName: 'Test with pytest'

  - task: PublishTestResults@2
    displayName: Publish test results
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage results
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

  - script: python setup.py bdist_wheel
    displayName: Build package

  - task: TwineAuthenticate@1
    displayName: Configure twine authentication
    inputs:
      pythonUploadServiceConnection: $(PYPI_SERVICE_CONNECTION)

  - script: twine upload -r $(PYPI_SERVICE_CONNECTION) --config-file $(PYPIRC_PATH) dist/* --non-interactive
    displayName: Publish artifacts
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
